=============
``mongosqld``
=============

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 1
   :class: singlecol

.. only:: html

   .. meta::
      :description: The mongosqld command man page.
      :keywords: mongosqld, mongodb, man page

Description
-----------

.. only:: (not man)

   .. binary:: mongosqld

.. include:: /includes/fact-bi-enterprise.rst

:binary:`~bin.mongosqld` accepts incoming requests from a SQL client and
proxies those requests to a :binary:`~bin.mongod` or
:binary:`~bin.mongos` instance.

Usage
-----

*New in version 2.3:*

You can start :binary:`~bin.mongosqld` either with a schema file in
:doc:`.drdl format </schema-configuration>` using the
:option:`--schema <mongosqld --schema>` option or by sampling data
from a MongoDB instance to create the schema.

You can specify which namespace or namespaces to sample data from with
the :option:`--sampleNamespaces <mongosqld --sampleNamespaces>`
option. If you don't specify any
namespaces or a schema file, :binary:`~bin.mongosqld` samples data from all
databases in the target MongoDB instance except the ``admin`` and
``local`` databases.

You can specify a database in which to store schema information with
the :option:`--sampleSource <mongosqld --sampleSource>`
option. Otherwise, :binary:`~bin.mongosqld` holds the schema in memory.

Starting ``mongosqld`` with a Schema File
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Use the :option:`--schema <mongosqld --schema>` option to
specify a schema file when starting :binary:`~bin.mongosqld`.

.. code-block:: shell

   mongosqld --schema /path/to/schema-file.drdl

Use :binary:`~bin.mongodrdl` to create a schema file from a MongoDB
instance.

Starting ``mongosqld`` with a Schema Database
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Use the :option:`--sampleSource <mongosqld --sampleSource>`
option to specify a database to store schema information.

.. code-block:: shell

   mongosqld --sampleSource sampleDb

Starting ``mongosqld`` with Specified Namespaces
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Use the :option:`--sampleNamespaces <mongosqld --sampleNamespaces>`
option to specify databases and collections for
:binary:`~bin.mongosqld` to sample data from to
create the schema.

.. include:: /includes/example-sampleNamespaces.rst

See additional :ref:`usage examples <usage-examples>` below.

.. _security-considerations:

Security Considerations
-----------------------

A :binary:`~bin.mongosqld` process which connects to a MongoDB instance
with authentication enabled must use authentication and pass MongoDB
user credentials, either through :ref:`command line options
<mongosqld-command-line-options>` or with a :ref:`configuration
file <config-format>`.

The user credentials you use with :binary:`~bin.mongosqld` must
belong to a MongoDB user with the ``listDatabases`` and
``listCollections`` privileges and must
have read permissions on all the namespaces you wish to sample.
The MongoDB :manual:`built-in All-Database Roles
</reference/built-in-roles/index.html#all-database-roles>` provide
the necessary privileges.

The MongoDB credentials which |bi-short| users provide to connect
via an SQL client can be for a different MongoDB user with fewer
permissions. SQL client users must have the ``listCollections``
privilege, which is included with the :manual:`built-in
Database User Roles
</reference/built-in-roles/index.html#database-user-roles>`

For more information on MongoDB
users and roles, see :manual:`Role-Based Access Control`.

See the :ref:`example <mongosqld-auth-example>` below of
:binary:`~bin.mongosqld` with authentication.

.. _mongosqld-command-line-options:

Command Line Options
--------------------

.. _msqld-core-options:

Core Options
~~~~~~~~~~~~

.. program:: mongosqld

.. include:: /includes/option/option-mongosqld-help.rst

.. include:: /includes/option/option-mongosqld-addr.rst

.. include:: /includes/option/option-mongosqld-version.rst

.. include:: /includes/option/option-mongosqld-config.rst

.. include:: /includes/option/option-mongosqld-mongo-uri.rst

.. include:: /includes/option/option-mongosqld-mongo-versionCompatibility.rst

.. include:: /includes/option/option-mongosqld-maxVarcharLength.rst

.. include:: /includes/option/option-mongosqld-mongo-username.rst

.. include:: /includes/option/option-mongosqld-mongo-password.rst

.. include:: /includes/option/option-mongosqld-mongo-authenticationSource.rst

.. include:: /includes/option/option-mongosqld-mongo-authenticationMechanism.rst

.. _msqld-schema-options:

Schema Options
~~~~~~~~~~~~~~

.. include:: /includes/option/option-mongosqld-schema.rst

.. include:: /includes/option/option-mongosqld-schemaDirectory.rst

.. include:: /includes/option/option-mongosqld-sampleNamespaces.rst

.. include:: /includes/option/option-mongosqld-sampleMode.rst

.. include:: /includes/option/option-mongosqld-sampleMode.rst

.. include:: /includes/option/option-mongosqld-sampleSource.rst

.. include:: /includes/option/option-mongosqld-sampleSize.rst

.. include:: /includes/option/option-mongosqld-sampleRefreshIntervalSecs.rst

.. include:: /includes/option/option-mongosqld-uuidSubtype3Encoding.rst

.. _msqld-log-options:

Log Options
~~~~~~~~~~~

.. include:: /includes/option/option-mongosqld-logAppend.rst

.. include:: /includes/option/option-mongosqld-logPath.rst

.. include:: /includes/option/option-mongosqld-logRotate.rst

.. include:: /includes/option/option-mongosqld-verbose.rst

.. include:: /includes/option/option-mongosqld-quiet.rst

.. _msqld-mongodb-tls-options:

MongoDB TLS/SSL Options
~~~~~~~~~~~~~~~~~~~~~~~

.. include:: /includes/option/option-mongosqld-mongo-ssl.rst

.. include:: /includes/option/option-mongosqld-mongo-sslPEMKeyFile.rst

.. include:: /includes/option/option-mongosqld-mongo-sslPEMKeyPassword.rst

.. include:: /includes/option/option-mongosqld-mongo-sslAllowInvalidHostnames.rst

.. include:: /includes/option/option-mongosqld-mongo-sslAllowInvalidCertificates.rst

.. include:: /includes/option/option-mongosqld-mongo-sslCAFile.rst

.. include:: /includes/option/option-mongosqld-mongo-sslCRLFile.rst

.. include:: /includes/option/option-mongosqld-mongo-sslFIPSMode.rst

.. _msqld-client-tls-options:

Client TLS/SSL Options
~~~~~~~~~~~~~~~~~~~~~~

.. include:: /includes/option/option-mongosqld-sslMode.rst

.. include:: /includes/option/option-mongosqld-sslPEMKeyFile.rst

.. include:: /includes/option/option-mongosqld-sslPEMKeyPassword.rst

.. include:: /includes/option/option-mongosqld-sslAllowInvalidCertificates.rst

.. include:: /includes/option/option-mongosqld-sslAllowInvalidHostnames.rst

.. include:: /includes/option/option-mongosqld-sslCAFile.rst

.. include:: /includes/option/option-mongosqld-sslCRLFile.rst

.. include:: /includes/option/option-mongosqld-auth.rst

.. include:: /includes/option/option-mongosqld-defaultAuthSource.rst

.. include:: /includes/option/option-mongosqld-defaultAuthMechanism.rst

Service Options
~~~~~~~~~~~~~~~

.. include:: /includes/option/option-mongosqld-serviceName.rst

.. include:: /includes/option/option-mongosqld-serviceDisplayName.rst

.. include:: /includes/option/option-mongosqld-serviceDescription.rst

.. _msqld-socket-options:

Socket Options
~~~~~~~~~~~~~~

.. include:: /includes/option/option-mongosqld-filePermissions.rst

.. include:: /includes/option/option-mongosqld-noUnixSocket.rst

.. include:: /includes/option/option-mongosqld-unixSocketPrefix.rst

.. _config-format:

Configuration File
------------------

You may configure :binary:`~bin.mongosqld` using a `YAML <http://yaml.org/>`_
configuration file. This file may contain the settings listed in the
following sections.

.. _msqld-conf-log-options:

Logging Options
~~~~~~~~~~~~~~~

.. code::

   systemLog:
     logAppend: <boolean>
     logRotate: "rename"|"reopen"
     path: <string>
     quiet: <boolean>
     verbosity: <integer>

.. list-table::
   :header-rows: 1

   * - Name
     - Type
     - Corresponds to

   * - .. setting:: systemLog.logAppend
     - boolean
     - :option:`--logAppend <mongosqld --logAppend>`

   * - .. setting:: systemLog.logRotate
     - string
     - :option:`--logRotate <mongosqld --logRotate>`

   * - .. setting:: systemLog.path
     - string
     - :option:`--logPath <mongosqld --logPath>`

   * - .. setting:: systemLog.quiet
     - boolean
     - :option:`--quiet <mongosqld --quiet>`

   * - .. setting:: systemLog.verbosity
     - integer
     - :option:`--verbose <mongosqld --verbose>`

.. _msqld-conf-schema-options:

Schema Options
~~~~~~~~~~~~~~

.. code::

   schema:
     path: <string>
     maxVarcharLength: <integer>

.. list-table::
   :header-rows: 1

   * - Name
     - Type
     - Corresponds to

   * - .. setting:: schema.path
     - string
     - :option:`--schema`

   * - .. setting:: schema.maxVarcharLength
     - integer
     - :option:`--maxVarcharLength`

Data Sampling Options
~~~~~~~~~~~~~~~~~~~~~

.. code::

   schema:
     sample:
       mode: <[read|write]>
       source: <string>
       size: <integer>
       namespaces: <array of strings>
       refreshIntervalSecs: <integer>
       uuidSubtype3Encoding: <[old|csharp|java]>

.. list-table::
   :header-rows: 1

   * - Name
     - Type
     - Corresponds to

   * - .. setting:: schema.sample.mode
     - string
     - :option:`--sampleMode <mongosqld --sampleMode>`

   * - .. setting:: schema.sample.source
     - string
     - :option:`--sampleSource  <mongosqld --sampleSource>`

   * - .. setting:: schema.sample.size
     - integer
     - :option:`--sampleSize <mongosqld --sampleSize>`

   * - .. setting:: schema.sample.namespaces
     - string or array of strings
     - :option:`--sampleNamespaces <mongosqld --sampleNamespaces>`

   * - .. setting:: schema.sample.refreshIntervalSecs
     - integer
     - :option:`--sampleRefreshIntervalSecs <mongosqld --sampleRefreshIntervalSecs>`

   * - .. setting:: schema.sample.uuidSubtype3Encoding
     - string
     - :option:`--uuidSubtype3Encoding <mongosqld --uuidSubtype3Encoding>`

.. _msqld-conf-runtime-options:

Runtime Options
~~~~~~~~~~~~~~~

.. code::

   runtime:
     memory:
       maxPerStage: <integer>

.. include:: /includes/option/setting-conf-runtime.memory.maxPerStage.rst

.. _msqld-conf-net-options:

Network Options
~~~~~~~~~~~~~~~

.. code::

   net:
     bindIp: <string>
     port: <integer>
     unixDomainSocket:
       enabled: <boolean>
       pathPrefix: <string>
       filePermissions: <string>
     ssl:
       mode: <string>
       allowInvalidCertificates: <boolean>
       PEMKeyFile: <string>
       PEMKeyPassword: <string>
       CAFile: <string>

.. list-table::
   :header-rows: 1

   * - Name
     - Type
     - Corresponds to

   * - .. setting:: net.bindIp
     - string
     - The hostname component of :option:`--addr`

       .. versionchanged:: 2.2
          To bind to multiple IP addresses, enter a list of comma separated values.

       .. example::

          "72.198.41.200,72.198.41.201,72.198.41.202"

   * - .. setting:: net.port
     - integer
     - The port component of :option:`--addr`

   * - .. setting:: net.unixDomainSocket.enabled
     - boolean
     - Inverse of :option:`--noUnixSocket`

   * - .. setting:: net.unixDomainSocket.pathPrefix
     - string
     - :option:`--unixSocketPrefix`

   * - .. setting:: net.unixDomainSocket.filePermissions
     - string
     - :option:`--filePermissions`

   * - .. setting:: net.ssl.allowInvalidCertificates
     - boolean
     - :option:`--sslAllowInvalidCertificates`

   * - .. setting:: net.ssl.mode
     - string
     - :option:`--sslMode`

   * - .. setting:: net.ssl.PEMKeyFile
     - string
     - :option:`--sslPEMKeyFile`

   * - .. setting:: net.ssl.PEMKeyPassword
     - string
     - :option:`--sslPEMKeyPassword`

   * - .. setting:: net.ssl.CAFile
     - string
     - :option:`--sslCAFile`

.. _msqld-conf-security-options:

Security Options
~~~~~~~~~~~~~~~~

.. code::

   security:
     enabled: <boolean>
     defaultMechanism: <string>
     defaultSource: <string>

.. list-table::
   :header-rows: 1

   * - Name
     - Type
     - Corresponds to

   * - .. setting:: security.enabled
     - boolean
     - :option:`--auth`

   * - .. setting:: security.defaultMechanism
     - string
     - :option:`--defaultAuthMechanism`

   * - .. setting:: security.defaultSource
     - string
     - :option:`--defaultAuthSource`

.. _msqld-conf-host-options:

MongoDB Host Options
~~~~~~~~~~~~~~~~~~~~

.. code::

   mongodb:
     versionCompatibility: <string>
     net:
       uri: <string>
       ssl:
         enabled: <boolean>
         allowInvalidCertificates: <boolean>
         allowInvalidHostnames: <boolean>
         PEMKeyFile: <string>
         PEMKeyPassword: <string>
         CAFile: <string>
         CRLFile: <string>
         FIPSMode: <boolean>
       auth:
         username: <username>
         password: <password>
         source: <auth-db-name>
         mechanism: <auth-mechanism>

.. list-table::
   :header-rows: 1

   * - Name
     - Type
     - Corresponds to

   * - .. setting:: mongodb.versionCompatibility
     - string
     - :option:`--mongo-versionCompatibility <mongosqld --mongo-versionCompatibility>`

   * - .. setting:: mongodb.net.uri
     - string
     - :option:`--mongo-uri <mongosqld --mongo-uri>`

   * - .. setting:: mongodb.net.ssl.enabled
     - boolean
     - :option:`--mongo-ssl <mongosqld --mongo-ssl>`

   * - .. setting:: mongodb.net.ssl.allowInvalidCertificates
     - boolean
     - :option:`--mongo-sslAllowInvalidCertificates <mongosqld --mongo-sslAllowInvalidCertificates>`

   * - .. setting:: mongodb.net.ssl.allowInvalidHostnames
     - boolean
     - :option:`--mongo-sslAllowInvalidHostnames <mongosqld --mongo-sslAllowInvalidHostnames>`

   * - .. setting:: mongodb.net.ssl.PEMKeyFile
     - string
     - :option:`--mongo-sslPEMKeyFile <mongosqld --mongo-sslPEMKeyFile>`

   * - .. setting:: mongodb.net.ssl.PEMKeyPassword
     - string
     - :option:`--mongo-sslPEMKeyPassword <mongosqld --mongo-sslPEMKeyPassword>`

   * - .. setting:: mongodb.net.ssl.CAFile
     - string
     - :option:`--mongo-sslCAFile <mongosqld --mongo-sslCAFile>`

   * - .. setting:: mongodb.net.ssl.CRLFile
     - string
     - :option:`--mongo-sslCRLFile <mongosqld --mongo-sslCRLFile>`

   * - .. setting:: mongodb.net.ssl.FIPSMode
     - boolean
     - :option:`--mongo-sslFIPSMode <mongosqld --mongo-sslFIPSMode>`

   * - .. setting:: mongodb.net.auth.username
     - boolean
     - :option:`--mongo-username <mongosqld --mongo-username>`

   * - .. setting:: mongodb.net.auth.password
     - boolean
     - :option:`--mongo-password <mongosqld --mongo-password>`

   * - .. setting:: mongodb.net.auth.source
     - boolean
     - :option:`--mongo-authenticationSource <mongosqld --mongo-authenticationSource>`

   * - .. setting:: mongodb.net.auth.mechanism
     - boolean
     - :option:`--mongo-authenticationMechanism  <mongosqld --mongo-authenticationMechanism>`

.. _msqld-conf-proc-options:

Process Management Options
~~~~~~~~~~~~~~~~~~~~~~~~~~

.. code::

   processManagement:
     service:
       name: <string>
       displayName: <string>
       description: <string>

.. list-table::
   :header-rows: 1

   * - Name
     - Type
     - Corresponds to

   * - .. setting:: processManagement.service.name
     - string
     - :option:`--serviceName <mongosqld --serviceName>`

   * - .. setting:: processManagement.service.displayName
     - string
     - :option:`--serviceDisplayName <mongosqld --serviceDisplayName>`

   * - .. setting:: processManagement.service.description
     - string
     - :option:`--serviceDescription <mongosqld --serviceDescription>`

Example Configuration File
~~~~~~~~~~~~~~~~~~~~~~~~~~

.. note::

   The paths used in this example configuration file are
   Linux-specific. Check your local system documentation to
   determine the correct paths for your system.

.. class:: copyable-code

.. code-block:: yaml

   systemLog:
     logAppend: false
     path: "/var/log/mongosqld/mongosqld.log"
     verbosity: vv

   security:
     enabled: true

   mongodb:
     net:
       uri: "mongo.example.com:27017"
       auth:
         username: "root"
         password: "changeme"

   net:
     bindIp: 192.0.2.14
     port: 3307
     ssl:
       mode: "allowSSL"
       PEMKeyFile: "/vagrant/certificates/mongosqld-server.pem"
       CAFile: "/vagrant/certificates/ca.crt"

   schema:
     sample:
       namespaces: "inventory.*"

   processManagement:
     service:
       name: mongosqld
       displayName: mongosqld
       description: "BI Connector SQL proxy server"

.. _usage-examples:

Usage Examples
--------------

``mongosqld`` with a Schema File
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Use the :option:`--schema <mongosqld --schema>` option to specify a
:doc:`schema file </schema-configuration>` for :binary:`~bin.mongosqld`
to use.

.. code-block:: shell

   mongosqld --schema /path/to/schema-file.drdl

.. _sampleNamespaces-example:

Specify a Collection to Sample
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Use the :option:`--sampleNamespaces <mongosqld --sampleNamespaces>`
option to specify a database
and collection for :binary:`~bin.mongosqld` to sample data from. If you
start :binary:`~bin.mongosqld` without the
:option:`--sampleNamespaces <mongosqld --sampleNamespaces>`
option, it samples data from all available databases except
the ``admin`` and ``local`` databases.

The following example samples data from a collection named
``addresses`` in a database named ``contacts``:

.. include:: /includes/example-sampleNamespaces.rst

Specify Multiple Collections to Sample
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

To sample data from all the collections in a database, use the
:option:`--sampleNamespaces <mongosqld --sampleNamespaces>` option with a wildcard (``*``).

The following example samples data from all the collections in a
database named ``inventory``:

.. code-block:: shell

   mongosqld --sampleNamespaces 'inventory.*'

You can repeat the :option:`--sampleNamespaces  <mongosqld --sampleNamespaces>` at the command line to
sample data from multiple collections within a database, or from
multiple collections across several databases.

The following example samples data from all the collections in
databases named ``cars`` and ``boats``:

.. code-block:: shell

   mongosqld --sampleNamespaces 'cars.*' \
             --sampleNamespaces 'boats.*' \

You can mix and match wildcards and specific collections with multiple
:option:`--sampleNamespaces <mongosqld --sampleNamespaces>` options.

The following example samples data from all collections in a database
named ``orders``, as well as the ``FY2015`` and
``FY2016`` collections from the ``expenses`` database:

.. code-block:: shell

   mongosqld --sampleNamespaces 'orders.*' \
             --sampleNamespaces expenses.FY2015 \
             --sampleNamespaces expenses.FY2016 \

.. note::

   It is only necessary to enclose the namespace in single quotes
   when you use a wildcard.

.. _sample-size-0:

Sample All Documents in a Collection
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

If you have a collection in which some documents have different
fields from others and you want to ensure that the schema takes them
all into consideration, set the :option:`--sampleSize <mongosqld
--sampleSize>` option to ``0``. This causes :binary:`~bin.mongosqld`
to examine all documents in the specified :option:`namespace
<mongosqld --sampleNamespaces>` when it builds its schema.

The following example instructs :binary:`~bin.mongosqld` to build the
schema based on all documents in the ``inventory.electronics``
namespace.

.. code-block:: shell

   mongosqld --sampleNamespaces inventory.electronics \
             --sampleSize 0

Specify a Database to Persist a Schema
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Use the :option:`--sampleSource <mongosqld --sampleSource>` option to
specify a database in which to store schema information. Use the
:option:`--sampleMode <mongosqld --sampleMode>` option to specify
whether :binary:`~bin.mongosqld` can write to the schema database or
only read from it.

The following example uses the ``sampleDb`` database to store schema
information and sets :option:`--sampleMode <mongosqld --sampleMode>` to ``write``.

.. code-block:: shell

   mongosqld --sampleSource sampleDb \
             --sampleMode write

Specify a Data Resampling Interval
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Use the :option:`--sampleRefreshIntervalSecs <mongosqld
--sampleRefreshIntervalSecs>` option to specify
an interval in seconds for :binary:`~bin.mongosqld` to resample data
and regenerate the schema. The default value for this option is ``0``,
which means that :binary:`~bin.mongosqld` never resamples data.

If you set a resampling interval with
:option:`--sampleRefreshIntervalSecs <mongosqld
--sampleRefreshIntervalSecs>` and you specify a schema
database with :option:`--sampleSource  <mongosqld --sampleSource>`, you
cannot set :option:`--sampleMode  <mongosqld --sampleMode>` to ``read``.

The following example does not specify a schema database or a schema
file, so it holds its schema in memory. It uses
:option:`--sampleRefreshIntervalSecs <mongosqld
--sampleRefreshIntervalSecs>` to specify a data resampling
interval of 3600 seconds.

.. code-block:: shell

   mongosqld --sampleRefreshIntervalSecs 3600

.. _mongosqld-auth-example:

``mongosqld`` with Authentication Enabled
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

To connect :binary:`~bin.mongosqld` to a MongoDB instance running
with :manual:`authentication </core/authentication>` enabled,
use the :option:`--auth <mongosqld --auth>` option and provide MongoDB user
credentials.

The following example starts :binary:`~bin.mongosqld` with
credentials for a user named ``reportsUser`` with password
``reportsPass``, who has access to the ``reports.inventory``
namespace.

.. code-block:: shell

   mongosqld --auth \
             --mongo-username reportsUser \
             --mongo-password reportsPass \
             --sampleNamespaces reports.inventory

This example does not specify an authenticating database with the
:option:`--mongo-authenticationSource <mongosqld --mongo-authenticationSource>` option, so it defaults to
``admin``. It does not specify an authentication mechanism with the
:option:`--mongo-authenticationMechanism <mongosqld --mongo-authenticationMechanism>` option, so it defaults to
``SCRAM-SHA-1``.

``mongosqld`` with a Configuration File
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

If you wish to specify a configuration file which saves logs to
``/var/log/mongosqld.log`` and loads a schema from ``/var/schema.drdl``,
you may save a file such as the following to ``/etc/mongosqld.conf``:

.. warning::

   All paths specified in the configuration file must be absolute,
   e.g. they must begin with ``/``.

.. code-block:: yaml

   systemLog:
     path: /var/log/mongosqld.log
   schema:
     path: /var/schema.drdl

You may then start :binary:`~bin.mongosqld` with the
:option:`--config <mongosqld --config>` option:

.. code-block:: sh

   mongosqld --config /etc/mongosqld.conf

For more information on starting ``mongosqld`` as a system service, see
the :ref:`Installation Guide <installation-guides>` for your operating
system.

Usage with Atlas
~~~~~~~~~~~~~~~~

`Atlas <https://docs.atlas.mongodb.com/>`_ is a cloud service for
running, monitoring, and maintaining MongoDB deployments, including the
provisioning of dedicated servers for the MongoDB instances.

Atlas uses TLS/SSL to encrypt connections and enforces authentication by
default.

.. note::

   With the MongoDB Atlas free tier, |bi-short| cannot run aggregation pipelines
   using the ``allowDiskUse`` option. This option allows aggregation stages to
   write data as temporary files to disk. To review the MongoDB Atlas free
   tier constraints, see the `MongoDB Atlas manual   <https://docs.atlas.mongodb.com/create-new-cluster/#service-m0-free-tier-limitations>`_.

To connect the
`MongoDB Connector for BI <https://www.mongodb.com/download-center?jmp=tbl#bi-connector>`_
to an Atlas cluster, you must provide :binary:`~bin.mongosqld` with a
``.pem`` key file.

:binary:`~bin.mongosqld` can use any valid TLS certificate issued by a
certificate authority, or a self-signed certificate. If you use a
self-signed certificate, although the communications channel will be
encrypted, there will be no validation of server identity. Although
such a situation will prevent eavesdropping on the connection, it
leaves you vulnerable to a man-in-the-middle attack. Using a
certificate signed by a trusted certificate authority will permit your
MySQL client to verify the server's identity.

For *testing* purposes, you can create a ``.pem`` key file named ``test.pem``
using the ``openssl`` tool:

.. class:: copyable-code
.. code-block:: sh

   openssl req -nodes -newkey rsa:2048 -keyout test.key -out test.crt -x509 -days 365 -subj "/C=US/ST=test/L=test/O=test Security/OU=IT Department/CN=test.com"
   cat test.crt test.key > test.pem

Start :binary:`~bin.mongosqld` with the :option:`--auth
<mongosqld --auth>` and :option:`--sslPEMKeyFile
<mongosqld --sslPEMKeyFile>` options.

If you named your key file ``test.pem`` as in the previous example, you
can run the following, substituting your :ref:`schema file <drdl>` and
cluster URI:

.. note:: Do not specify a username and password in :option:`--mongo-uri`. The
   connection string should only contain the list of servers.

.. class:: copyable-code
.. code-block:: sh

   mongosqld --mongo-ssl --auth --sslPEMKeyFile test.pem --schema <schema.drdl> --mongo-uri <uri>

Pass your username, password, and authentication database to your SQL
client. For example, using ``mysql`` without verifying your :binary:`~bin.mongosqld`
server certificate:

.. class:: copyable-code
.. code-block:: sh

   mysql --host <mongosqld-host> --port <mongosqld-port> -u <username>?source=admin -p --ssl-mode required --enable-cleartext-plugin

Refer to :doc:`/connect/mysql` for more details on using the
``mysql`` client with the |bi-short|.

Sampling Mode Reference Chart
-----------------------------

The chart below describes types of :binary:`~bin.mongosqld`
startup configurations and the :ref:`options <msqld-core-options>` used
with each.

.. list-table::
   :header-rows: 1
   :widths: 15 35 40

   * - Mode
     - ``mongosqld`` Options
     - Behavior

   * - Standalone Reader
     - - :option:`--sampleMode <mongosqld --sampleMode>` ``read``
       - :option:`--sampleSource <mongosqld --sampleSource>` *not used*
     - :manual:`Standalone </reference/glossary/#term-standalone>`
       :program:`mongod` instance. :binary:`~bin.mongosqld`
       samples data upon startup. If :option:`--sampleRefreshIntervalSecs
       <mongosqld --sampleRefreshIntervalSecs>` > 0, resample
       at specified interval.

       .. example::

          .. code-block:: sh

             mongosqld --sampleMode read

   * - Clustered Reader
     - - :option:`--sampleMode <mongosqld --sampleMode>` ``read``
       - :option:`--sampleSource <mongosqld --sampleSource>` <dbName>
       - :option:`--sampleRefreshIntervalSecs <mongosqld --sampleRefreshIntervalSecs>` *not used*
     - In a :manual:`replica set </replication/>` or
       :manual:`sharded cluster </sharding>`
       environment, sample data only at startup. Read schema data
       from specified schema database on the :manual:`primary
       </core/replica-set-primary/>`.

       .. example::

          .. code-block:: sh

             mongosqld --sampleMode read \
                       --sampleSource schemaDb

   * - Clustered Writer
     - - :option:`--sampleMode <mongosqld --sampleMode>` ``write``
       - :option:`--sampleSource <mongosqld --sampleSource>` <dbName>
       - :option:`--sampleRefreshIntervalSecs  <mongosqld --sampleRefreshIntervalSecs>` > 0
     - Read and persist schema data in a user-specified schema
       database.

       .. example::

          .. code-block:: sh

              mongosqld --sampleMode write \
                        --sampleSource schemaDb \
                        --sampleRefreshIntervalSecs 3600

Invalid Configurations
~~~~~~~~~~~~~~~~~~~~~~

The following :binary:`~bin.mongosqld` option configurations are invalid
and cause an error at startup.

.. list-table::
   :header-rows: 1
   :widths: 15 35 40

   * - Mode
     - ``mongosqld`` Options
     - Behavior

   * - Standalone Writer (**invalid**)
     - - :option:`--sampleMode <mongosqld --sampleMode>` ``write``
       - :option:`--sampleSource <mongosqld --sampleMode>` *not used*
     - This configuration is invalid for a :manual:`standalone
       </reference/glossary/#term-standalone>`
       :binary:`~bin.mongod` instance because in ``write`` mode there
       must be a writeable database specified.

   * - Clustered Sampling Reader (**invalid**)
     - - :option:`--sampleMode <mongosqld --sampleMode>` ``read``
       - :option:`--sampleSource <mongosqld --sampleSource>` <dbName>
       - :option:`--sampleRefreshIntervalSecs <mongosqld --sampleRefreshIntervalSecs>` > 0
     - When used in a MongoDB :manual:`replica set
       </replication/>` or :manual:`sharded cluster </sharding>`,
       this configuration is invalid. When a
       database is specified for storing schema data with
       :option:`--sampleSource <mongosqld --sampleSource>`, :option:`--sampleMode <mongosqld --sampleMode>` must be set to
       ``write`` so that the schema may be updated from
       the :manual:`primary </core/replica-set-primary/>` to
       maintain cluster-wide consistency.
