#  This file borrows content from other files, including
#  /includes/options-shared.yaml,
#  which uses {{program}} to refer to the tool.
#
program: mongosqld
name: help
directive: option
inherit:
  name: help
  program: _shared
  file: options-shared.yaml
---
program: mongosqld
name: version
directive: option
inherit:
  name: version
  program: _shared
  file: options-shared.yaml
---
program: mongosqld
name: addr
directive: option
args: null
description: |
  Specifies the host address to listen on.
optional: true
default: 127.0.0.1:3307
---
program: mongosqld
name: verbose
directive: option
aliases: -v
description: |
  Specifies that {{program}} should provide more detailed log output. Include
  multiple times for more verbosity (e.g. ``-vvvvv``).
optional: true
---
program: mongosqld
name: schema
directive: option
args: <filename>
description: |
  Specifies the path to a schema file generated by :program:`mongodrdl`.
---
program: mongosqld
name: schemaDirectory
directive: option
args: <directoryname>
description: |
  Specifies the path to a directory containing schema files generated
  by :program:`mongodrdl`.

  All files in this directory **MUST** be schema files, or else
  :program:`mongosqld` will not start.
---
program: mongosqld
name: mongo-uri
directive: option
args: <uri>
description: |
  Specifies a MongoDB :ref:`connection string <mongodb-uri>` to connect to.

  Do not specify a username and password in your connection string.
  {{program}} will pass authentication credentials from the client to
  the MongoDB server upon receiving a connection if :option:`--auth` is
  enabled.

  To enable TLS/SSL in this connection, use the :option:`--mongo-ssl`
  option.

  The {{role}} option also supports the :urioption:`readPreference` and
  :urioption:`readPreferenceTags` {{program}}  connection string URI
  options. To learn more about connection string URI options,
  see :ref:`Read Preference options <connections-read-preference>`.

optional: true
default: mongodb://localhost:27017
---
program: mongosqld
name: mongo-ssl
directive: option
inherit:
  name: ssl
  program: _shared
  file: options-shared.yaml
---
program: mongosqld
name: mongo-sslFIPSMode
directive: option
args: null
description: |
  Enable FIPS mode in the installed OpenSSL library.
optional: true
---
program: mongosqld
name: mongo-sslPEMKeyFile
directive: option
inherit:
  name: sslPEMKeyFile
  program: _shared
  file: options-shared.yaml
replacement:
  ssloption: ":option:`--mongo-ssl`"
---
program: mongosqld
name: mongo-sslPEMKeyPassword
directive: option
inherit:
  name: sslPEMKeyPassword
  program: _shared
  file: options-shared.yaml
---
program: mongosqld
name: mongo-sslAllowInvalidCertificates
directive: option
inherit:
  name: sslAllowInvalidCertificates
  program: _shared
  file: options-shared.yaml
---
program: mongosqld
name: mongo-sslCAFile
directive: option
inherit:
  name: sslCAFile
  program: _shared
  file: options-shared.yaml
replacement:
  ssl-option: ":option:`--mongo-ssl`"
---
program: mongosqld
name: sslPEMKeyFile
directive: option
args: <filename>
description: |
  Specifies the :file:`.pem` file containing both the TLS/SSL certificate
  and key for MySQL clients. Specify the file name of the :file:`.pem`
  file using relative or absolute paths.
optional: true
---
program: mongosqld
name: sslPEMKeyPassword
directive: option
args: <password>
description: |
  Specifies the password used to decrypt the private key specified by
  :option:`--sslPEMKeyFile`.
optional: true
---
program: mongosqld
name: sslAllowInvalidCertificates
directive: option
args: null
description: |
  Permits MySQL clients to present invalid client SSL/TLS certificates.
optional: true
---
program: mongosqld
name: sslCAFile
directive: option
args: <filename>
description: |
  Specifies the MySQL client's :file:`.pem` file containing the root
  certificate chain from the Certificate Authority. Specify the file
  name of the :file:`.pem` file using relative or absolute paths.
optional: true
---
program: mongosqld
name: auth
directive: option
args: null
description: |
  Require authentication for incoming client requests. Requires
  :option:`--sslPEMKeyFile`.
optional: true
---
program: mongosqld
name: logAppend
directive: option
args: null
description: |
  Append new logging output to an existing log file specified by
  :option:`--logPath`.
optional: true
---
program: mongosqld
name: logPath
directive: option
args: <filename>
description: |
  Specifies a path to a log file for storing logging output.
default: stderr
optional: true
---
program: mongosqld
name: quiet
directive: option
inherit:
  name: quiet
  program: _shared
  file: options-shared.yaml
---
program: mongosqld
name: filePermissions
directive: option
args: <mode>
description: Specify the permissions for the Unix domain socket file.
optional: true
default: 0700
---
program: mongosqld
name: noUnixSocket
directive: option
args: null
description: Disable listening on Unix domain sockets.
optional: true
---
program: mongosqld
name: unixSocketPrefix
directive: option
args: <path>
description: |
  Specify an alternative directory for the {{program}} Unix domain
  socket.

  {{program}} will create a socket file called ``mysql.sock`` underneath
  this path. If you do not specify {{role}}, the socket will exist at
  ``/tmp/mysql.sock``.
optional: true
default: /tmp
---
program: mongosqld
name: config
directive: option
args: <path>
description: |
  Specify a path to a :ref:`configuration file <config-format>`.
optional: true
---
directive: setting
program: conf
name: runtime.memory.maxPerStage
type: integer
description: |
  Specifies the maximum amount of memory in bytes that a query execution
  stage may use.
default: unlimited
...
